import {
  INCOMING_RUNE_RENDERING_COLOUR_ALPHA,
  INCOMING_RUNE_RENDERING_COLOUR_HUE,
  INCOMING_RUNE_RENDERING_COLOUR_LIGHTNESS,
  INCOMING_RUNE_RENDERING_COLOUR_SATURATION,
  INCOMING_RUNE_RENDERING_SHADOW_BLUR,
  INCOMING_RUNE_RENDERING_SHADOW_COLOUR_ALPHA,
  INCOMING_RUNE_RENDERING_SHADOW_COLOUR_HUE,
  INCOMING_RUNE_RENDERING_SHADOW_COLOUR_LIGHTNESS,
  INCOMING_RUNE_RENDERING_SHADOW_COLOUR_SATURATION,
  INCOMING_RUNE_RENDERING_THICKNESS,
} from "../../../config/values.js";
import { HSLA } from "../../../HSLA";

export const makeRendering = ({ vertices = [] } = {}) => ({
  colour: new HSLA({
    h: INCOMING_RUNE_RENDERING_COLOUR_HUE,
    s: INCOMING_RUNE_RENDERING_COLOUR_SATURATION,
    l: INCOMING_RUNE_RENDERING_COLOUR_LIGHTNESS,
    a: INCOMING_RUNE_RENDERING_COLOUR_ALPHA,
  }),
  radius: INCOMING_RUNE_RENDERING_THICKNESS,
  shadowColour: new HSLA({
    h: INCOMING_RUNE_RENDERING_SHADOW_COLOUR_HUE,
    s: INCOMING_RUNE_RENDERING_SHADOW_COLOUR_SATURATION,
    l: INCOMING_RUNE_RENDERING_SHADOW_COLOUR_LIGHTNESS,
    a: INCOMING_RUNE_RENDERING_SHADOW_COLOUR_ALPHA,
  }),
  shadowBlur: INCOMING_RUNE_RENDERING_SHADOW_BLUR,
  thickness: INCOMING_RUNE_RENDERING_THICKNESS,
  vertices,
});
